/**
 ******************************************************************************
 * @addtogroup UAVObjects LibrePilot UAVObjects
 * @{
 * @addtogroup HwSPRacingF3EVOSettings HwSPRacingF3EVOSettings
 * @brief Seriously Pro SPRacingF3 EVO hardware configuration.
 *
 * Autogenerated files and functions for HwSPRacingF3EVOSettings Object
 *
 * @{
 *
 * @file       hwspracingf3evosettings.h
 *
 * @author     The LibrePilot Project, https://www.librepilot.org, (C) 2017.
 *             The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 *
 * @brief      Arduino Header of the HwSPRacingF3EVOSettings object. This file has been
 *             automatically generated by the UAVObjectGenerator.
 *
 * @note       Object definition file: hwspracingf3evosettings.xml.
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef HWSPRACINGF3EVOSETTINGS_H
#define HWSPRACINGF3EVOSETTINGS_H
#include <stdbool.h>
/* Object constants */
#define HWSPRACINGF3EVOSETTINGS_OBJID 0x607C00A8
#define HWSPRACINGF3EVOSETTINGS_ISSINGLEINST 1
#define HWSPRACINGF3EVOSETTINGS_ISSETTINGS 1
#define HWSPRACINGF3EVOSETTINGS_ISPRIORITY 0
#define HWSPRACINGF3EVOSETTINGS_NUMBYTES sizeof(HwSPRacingF3EVOSettingsData)

/* Field UARTPort information */

// Enumeration options for field UARTPort
typedef enum __attribute__ ((__packed__)) {
    HWSPRACINGF3EVOSETTINGS_UARTPORT_DISABLED=0,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_TELEMETRY=1,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_GPS=2,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_SBUS=3,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_DSM=4,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_EXBUS=5,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_HOTTSUMD=6,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_HOTTSUMH=7,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_SRXL=8,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_IBUS=9,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_DEBUGCONSOLE=10,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_COMBRIDGE=11,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_MSP=12,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_MAVLINK=13,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_HOTTTELEMETRY=14,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_FRSKYSENSORHUB=15,
    HWSPRACINGF3EVOSETTINGS_UARTPORT_PPM=16
} HwSPRacingF3EVOSettingsUARTPortOptions;

// Number of elements for field UARTPort
#define HWSPRACINGF3EVOSETTINGS_UARTPORT_NUMELEM 3

/* Field I2CPort information */

// Enumeration options for field I2CPort
typedef enum __attribute__ ((__packed__)) {
    HWSPRACINGF3EVOSETTINGS_I2CPORT_DISABLED=0,
    HWSPRACINGF3EVOSETTINGS_I2CPORT_I2C=1
} HwSPRacingF3EVOSettingsI2CPortOptions;

/* Field LEDPort information */

// Enumeration options for field LEDPort
typedef enum __attribute__ ((__packed__)) {
    HWSPRACINGF3EVOSETTINGS_LEDPORT_DISABLED=0,
    HWSPRACINGF3EVOSETTINGS_LEDPORT_WS281X=1
} HwSPRacingF3EVOSettingsLEDPortOptions;




/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    HwSPRacingF3EVOSettingsUARTPortOptions UARTPort[3];
    HwSPRacingF3EVOSettingsI2CPortOptions I2CPort;
    HwSPRacingF3EVOSettingsLEDPortOptions LEDPort;

} __attribute__((packed)) HwSPRacingF3EVOSettingsDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes
 */
typedef HwSPRacingF3EVOSettingsDataPacked __attribute__((aligned(4))) HwSPRacingF3EVOSettingsData;

/*
 * Union to apply the data array to and to use as structured object data
 */
union {
    HwSPRacingF3EVOSettingsDataPacked data;
    byte arr[HWSPRACINGF3EVOSETTINGS_NUMBYTES];
 } HwSPRacingF3EVOSettingsDataUnion;

#endif // HWSPRACINGF3EVOSETTINGS_H

/**
 * @}
 * @}
 */
