/**
 ******************************************************************************
 * @addtogroup UAVObjects LibrePilot UAVObjects
 * @{
 * @addtogroup ReceiverActivity ReceiverActivity
 * @brief Monitors which receiver channels have been active within the last second.
 *
 * Autogenerated files and functions for ReceiverActivity Object
 *
 * @{
 *
 * @file       receiveractivity.h
 *
 * @author     The LibrePilot Project, https://www.librepilot.org, (C) 2017.
 *             The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 *
 * @brief      Arduino Header of the ReceiverActivity object. This file has been
 *             automatically generated by the UAVObjectGenerator.
 *
 * @note       Object definition file: receiveractivity.xml.
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef RECEIVERACTIVITY_H
#define RECEIVERACTIVITY_H
#include <stdbool.h>
/* Object constants */
#define RECEIVERACTIVITY_OBJID 0xA00CB4AA
#define RECEIVERACTIVITY_ISSINGLEINST 1
#define RECEIVERACTIVITY_ISSETTINGS 0
#define RECEIVERACTIVITY_ISPRIORITY 0
#define RECEIVERACTIVITY_NUMBYTES sizeof(ReceiverActivityData)

/* Field ActiveGroup information */

// Enumeration options for field ActiveGroup
typedef enum __attribute__ ((__packed__)) {
    RECEIVERACTIVITY_ACTIVEGROUP_PWM=0,
    RECEIVERACTIVITY_ACTIVEGROUP_PPM=1,
    RECEIVERACTIVITY_ACTIVEGROUP_DSMMAINPORT=2,
    RECEIVERACTIVITY_ACTIVEGROUP_DSMFLEXIPORT=3,
    RECEIVERACTIVITY_ACTIVEGROUP_DSMRCVRPORT=4,
    RECEIVERACTIVITY_ACTIVEGROUP_SBUS=5,
    RECEIVERACTIVITY_ACTIVEGROUP_EXBUS=6,
    RECEIVERACTIVITY_ACTIVEGROUP_HOTT=7,
    RECEIVERACTIVITY_ACTIVEGROUP_SRXL=8,
    RECEIVERACTIVITY_ACTIVEGROUP_IBUS=9,
    RECEIVERACTIVITY_ACTIVEGROUP_GCS=10,
    RECEIVERACTIVITY_ACTIVEGROUP_OPLINK=11,
    RECEIVERACTIVITY_ACTIVEGROUP_OPENLRS=12,
    RECEIVERACTIVITY_ACTIVEGROUP_NONE=13
} ReceiverActivityActiveGroupOptions;

/* Field ActiveChannel information */




/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    ReceiverActivityActiveGroupOptions ActiveGroup;
    uint8_t ActiveChannel;

} __attribute__((packed)) ReceiverActivityDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes
 */
typedef ReceiverActivityDataPacked __attribute__((aligned(4))) ReceiverActivityData;

/*
 * Union to apply the data array to and to use as structured object data
 */
union {
    ReceiverActivityDataPacked data;
    byte arr[RECEIVERACTIVITY_NUMBYTES];
 } ReceiverActivityDataUnion;

#endif // RECEIVERACTIVITY_H

/**
 * @}
 * @}
 */
