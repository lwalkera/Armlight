/**
 ******************************************************************************
 * @addtogroup UAVObjects LibrePilot UAVObjects
 * @{
 * @addtogroup StabilizationDesired StabilizationDesired
 * @brief The desired attitude that @ref StabilizationModule will try and achieve if FlightMode is Stabilized.  Comes from @ref ManaulControlModule.
 *
 * Autogenerated files and functions for StabilizationDesired Object
 *
 * @{
 *
 * @file       stabilizationdesired.h
 *
 * @author     The LibrePilot Project, https://www.librepilot.org, (C) 2017.
 *             The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 *
 * @brief      Arduino Header of the StabilizationDesired object. This file has been
 *             automatically generated by the UAVObjectGenerator.
 *
 * @note       Object definition file: stabilizationdesired.xml.
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef STABILIZATIONDESIRED_H
#define STABILIZATIONDESIRED_H
#include <stdbool.h>
/* Object constants */
#define STABILIZATIONDESIRED_OBJID 0x5146807C
#define STABILIZATIONDESIRED_ISSINGLEINST 1
#define STABILIZATIONDESIRED_ISSETTINGS 0
#define STABILIZATIONDESIRED_ISPRIORITY 0
#define STABILIZATIONDESIRED_NUMBYTES sizeof(StabilizationDesiredData)

/* Field Roll information */

/* Field Pitch information */

/* Field Yaw information */

/* Field Thrust information */

/* Field StabilizationMode information */

// Enumeration options for field StabilizationMode
typedef enum __attribute__ ((__packed__)) {
    STABILIZATIONDESIRED_STABILIZATIONMODE_MANUAL=0,
    STABILIZATIONDESIRED_STABILIZATIONMODE_RATE=1,
    STABILIZATIONDESIRED_STABILIZATIONMODE_RATETRAINER=2,
    STABILIZATIONDESIRED_STABILIZATIONMODE_ATTITUDE=3,
    STABILIZATIONDESIRED_STABILIZATIONMODE_AXISLOCK=4,
    STABILIZATIONDESIRED_STABILIZATIONMODE_WEAKLEVELING=5,
    STABILIZATIONDESIRED_STABILIZATIONMODE_VIRTUALBAR=6,
    STABILIZATIONDESIRED_STABILIZATIONMODE_ACRO=7,
    STABILIZATIONDESIRED_STABILIZATIONMODE_RATTITUDE=8,
    STABILIZATIONDESIRED_STABILIZATIONMODE_ALTITUDEHOLD=9,
    STABILIZATIONDESIRED_STABILIZATIONMODE_ALTITUDEVARIO=10,
    STABILIZATIONDESIRED_STABILIZATIONMODE_CRUISECONTROL=11,
    STABILIZATIONDESIRED_STABILIZATIONMODE_SYSTEMIDENT=12
} StabilizationDesiredStabilizationModeOptions;

// Array element names for field StabilizationMode
typedef enum {
    STABILIZATIONDESIRED_STABILIZATIONMODE_ROLL=0,
    STABILIZATIONDESIRED_STABILIZATIONMODE_PITCH=1,
    STABILIZATIONDESIRED_STABILIZATIONMODE_YAW=2,
    STABILIZATIONDESIRED_STABILIZATIONMODE_THRUST=3
} StabilizationDesiredStabilizationModeElem;

// Number of elements for field StabilizationMode
#define STABILIZATIONDESIRED_STABILIZATIONMODE_NUMELEM 4



typedef struct __attribute__ ((__packed__)) {
    StabilizationDesiredStabilizationModeOptions Roll;
    StabilizationDesiredStabilizationModeOptions Pitch;
    StabilizationDesiredStabilizationModeOptions Yaw;
    StabilizationDesiredStabilizationModeOptions Thrust;
}  StabilizationDesiredStabilizationModeData ;
typedef struct __attribute__ ((__packed__)) {
    StabilizationDesiredStabilizationModeOptions array[4];
}  StabilizationDesiredStabilizationModeDataArray ;
#define StabilizationDesiredStabilizationModeToArray( var ) UAVObjectFieldToArray( StabilizationDesiredStabilizationModeData, var )


/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    float Roll;
    float Pitch;
    float Yaw;
    float Thrust;
    StabilizationDesiredStabilizationModeData StabilizationMode;

} __attribute__((packed)) StabilizationDesiredDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes
 */
typedef StabilizationDesiredDataPacked __attribute__((aligned(4))) StabilizationDesiredData;

/*
 * Union to apply the data array to and to use as structured object data
 */
union {
    StabilizationDesiredDataPacked data;
    byte arr[STABILIZATIONDESIRED_NUMBYTES];
 } StabilizationDesiredDataUnion;

#endif // STABILIZATIONDESIRED_H

/**
 * @}
 * @}
 */
