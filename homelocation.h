/**
 ******************************************************************************
 * @addtogroup UAVObjects LibrePilot UAVObjects
 * @{
 * @addtogroup HomeLocation HomeLocation
 * @brief HomeLocation setting which contains the constants to translate from longitude and latitude to NED reference frame.  Automatically set by @ref GPSModule after acquiring a 3D lock.  Used by @ref AHRSCommsModule.
 *
 * Autogenerated files and functions for HomeLocation Object
 *
 * @{
 *
 * @file       homelocation.h
 *
 * @author     The LibrePilot Project, https://www.librepilot.org, (C) 2017.
 *             The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 *
 * @brief      Arduino Header of the HomeLocation object. This file has been
 *             automatically generated by the UAVObjectGenerator.
 *
 * @note       Object definition file: homelocation.xml.
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef HOMELOCATION_H
#define HOMELOCATION_H
#include <stdbool.h>
/* Object constants */
#define HOMELOCATION_OBJID 0x387E8F46
#define HOMELOCATION_ISSINGLEINST 1
#define HOMELOCATION_ISSETTINGS 1
#define HOMELOCATION_ISPRIORITY 0
#define HOMELOCATION_NUMBYTES sizeof(HomeLocationData)

/* Field Latitude information */

/* Field Longitude information */

/* Field Altitude information */

/* Field Be information */

// Number of elements for field Be
#define HOMELOCATION_BE_NUMELEM 3

/* Field g_e information */

/* Field Set information */

// Enumeration options for field Set
typedef enum __attribute__ ((__packed__)) {
    HOMELOCATION_SET_FALSE=0,
    HOMELOCATION_SET_TRUE=1
} HomeLocationSetOptions;




/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    int32_t Latitude;
    int32_t Longitude;
    float Altitude;
    float Be[3];
    float g_e;
    HomeLocationSetOptions Set;

} __attribute__((packed)) HomeLocationDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes
 */
typedef HomeLocationDataPacked __attribute__((aligned(4))) HomeLocationData;

/*
 * Union to apply the data array to and to use as structured object data
 */
union {
    HomeLocationDataPacked data;
    byte arr[HOMELOCATION_NUMBYTES];
 } HomeLocationDataUnion;

#endif // HOMELOCATION_H

/**
 * @}
 * @}
 */
