/**
 ******************************************************************************
 * @addtogroup UAVObjects LibrePilot UAVObjects
 * @{
 * @addtogroup GroundPathFollowerSettings GroundPathFollowerSettings
 * @brief Settings for the @ref GroundPathFollowerModule
 *
 * Autogenerated files and functions for GroundPathFollowerSettings Object
 *
 * @{
 *
 * @file       groundpathfollowersettings.h
 *
 * @author     The LibrePilot Project, https://www.librepilot.org, (C) 2017.
 *             The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 *
 * @brief      Arduino Header of the GroundPathFollowerSettings object. This file has been
 *             automatically generated by the UAVObjectGenerator.
 *
 * @note       Object definition file: groundpathfollowersettings.xml.
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef GROUNDPATHFOLLOWERSETTINGS_H
#define GROUNDPATHFOLLOWERSETTINGS_H
#include <stdbool.h>
/* Object constants */
#define GROUNDPATHFOLLOWERSETTINGS_OBJID 0xCD54334C
#define GROUNDPATHFOLLOWERSETTINGS_ISSINGLEINST 1
#define GROUNDPATHFOLLOWERSETTINGS_ISSETTINGS 1
#define GROUNDPATHFOLLOWERSETTINGS_ISPRIORITY 0
#define GROUNDPATHFOLLOWERSETTINGS_NUMBYTES sizeof(GroundPathFollowerSettingsData)

/* Field HorizontalVelMax information */

/* Field HorizontalVelMin information */

/* Field CourseFeedForward information */

/* Field VelocityFeedForward information */

/* Field HorizontalPosP information */

/* Field SpeedPI information */

// Array element names for field SpeedPI
typedef enum {
    GROUNDPATHFOLLOWERSETTINGS_SPEEDPI_KP=0,
    GROUNDPATHFOLLOWERSETTINGS_SPEEDPI_KI=1,
    GROUNDPATHFOLLOWERSETTINGS_SPEEDPI_KD=2,
    GROUNDPATHFOLLOWERSETTINGS_SPEEDPI_BETA=3
} GroundPathFollowerSettingsSpeedPIElem;

// Number of elements for field SpeedPI
#define GROUNDPATHFOLLOWERSETTINGS_SPEEDPI_NUMELEM 4

/* Field ThrustLimit information */

// Array element names for field ThrustLimit
typedef enum {
    GROUNDPATHFOLLOWERSETTINGS_THRUSTLIMIT_MIN=0,
    GROUNDPATHFOLLOWERSETTINGS_THRUSTLIMIT_SLOWFORWARD=1,
    GROUNDPATHFOLLOWERSETTINGS_THRUSTLIMIT_MAX=2
} GroundPathFollowerSettingsThrustLimitElem;

// Number of elements for field ThrustLimit
#define GROUNDPATHFOLLOWERSETTINGS_THRUSTLIMIT_NUMELEM 3

/* Field UpdatePeriod information */



typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
    float Kd;
    float Beta;
}  GroundPathFollowerSettingsSpeedPIData ;
typedef struct __attribute__ ((__packed__)) {
    float array[4];
}  GroundPathFollowerSettingsSpeedPIDataArray ;
#define GroundPathFollowerSettingsSpeedPIToArray( var ) UAVObjectFieldToArray( GroundPathFollowerSettingsSpeedPIData, var )

typedef struct __attribute__ ((__packed__)) {
    float Min;
    float SlowForward;
    float Max;
}  GroundPathFollowerSettingsThrustLimitData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  GroundPathFollowerSettingsThrustLimitDataArray ;
#define GroundPathFollowerSettingsThrustLimitToArray( var ) UAVObjectFieldToArray( GroundPathFollowerSettingsThrustLimitData, var )


/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    float HorizontalVelMax;
    float HorizontalVelMin;
    float CourseFeedForward;
    float VelocityFeedForward;
    float HorizontalPosP;
    GroundPathFollowerSettingsSpeedPIData SpeedPI;
    GroundPathFollowerSettingsThrustLimitData ThrustLimit;
    int32_t UpdatePeriod;

} __attribute__((packed)) GroundPathFollowerSettingsDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes
 */
typedef GroundPathFollowerSettingsDataPacked __attribute__((aligned(4))) GroundPathFollowerSettingsData;

/*
 * Union to apply the data array to and to use as structured object data
 */
union {
    GroundPathFollowerSettingsDataPacked data;
    byte arr[GROUNDPATHFOLLOWERSETTINGS_NUMBYTES];
 } GroundPathFollowerSettingsDataUnion;

#endif // GROUNDPATHFOLLOWERSETTINGS_H

/**
 * @}
 * @}
 */
