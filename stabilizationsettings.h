/**
 ******************************************************************************
 * @addtogroup UAVObjects LibrePilot UAVObjects
 * @{
 * @addtogroup StabilizationSettings StabilizationSettings
 * @brief PID settings used by the Stabilization module to combine the @ref AttitudeActual and @ref AttitudeDesired to compute @ref ActuatorDesired
 *
 * Autogenerated files and functions for StabilizationSettings Object
 *
 * @{
 *
 * @file       stabilizationsettings.h
 *
 * @author     The LibrePilot Project, https://www.librepilot.org, (C) 2017.
 *             The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 *
 * @brief      Arduino Header of the StabilizationSettings object. This file has been
 *             automatically generated by the UAVObjectGenerator.
 *
 * @note       Object definition file: stabilizationsettings.xml.
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef STABILIZATIONSETTINGS_H
#define STABILIZATIONSETTINGS_H
#include <stdbool.h>
/* Object constants */
#define STABILIZATIONSETTINGS_OBJID 0xF4D8AECC
#define STABILIZATIONSETTINGS_ISSINGLEINST 1
#define STABILIZATIONSETTINGS_ISSETTINGS 1
#define STABILIZATIONSETTINGS_ISPRIORITY 0
#define STABILIZATIONSETTINGS_NUMBYTES sizeof(StabilizationSettingsData)

/* Field VbarSensitivity information */

// Array element names for field VbarSensitivity
typedef enum {
    STABILIZATIONSETTINGS_VBARSENSITIVITY_ROLL=0,
    STABILIZATIONSETTINGS_VBARSENSITIVITY_PITCH=1,
    STABILIZATIONSETTINGS_VBARSENSITIVITY_YAW=2
} StabilizationSettingsVbarSensitivityElem;

// Number of elements for field VbarSensitivity
#define STABILIZATIONSETTINGS_VBARSENSITIVITY_NUMELEM 3

/* Field VbarRollPI information */

// Array element names for field VbarRollPI
typedef enum {
    STABILIZATIONSETTINGS_VBARROLLPI_KP=0,
    STABILIZATIONSETTINGS_VBARROLLPI_KI=1
} StabilizationSettingsVbarRollPIElem;

// Number of elements for field VbarRollPI
#define STABILIZATIONSETTINGS_VBARROLLPI_NUMELEM 2

/* Field VbarPitchPI information */

// Array element names for field VbarPitchPI
typedef enum {
    STABILIZATIONSETTINGS_VBARPITCHPI_KP=0,
    STABILIZATIONSETTINGS_VBARPITCHPI_KI=1
} StabilizationSettingsVbarPitchPIElem;

// Number of elements for field VbarPitchPI
#define STABILIZATIONSETTINGS_VBARPITCHPI_NUMELEM 2

/* Field VbarYawPI information */

// Array element names for field VbarYawPI
typedef enum {
    STABILIZATIONSETTINGS_VBARYAWPI_KP=0,
    STABILIZATIONSETTINGS_VBARYAWPI_KI=1
} StabilizationSettingsVbarYawPIElem;

// Number of elements for field VbarYawPI
#define STABILIZATIONSETTINGS_VBARYAWPI_NUMELEM 2

/* Field VbarTau information */

/* Field GyroTau information */

/* Field DerivativeGamma information */

/* Field AxisLockKp information */

/* Field WeakLevelingKp information */

/* Field CruiseControlMaxPowerFactor information */

/* Field CruiseControlPowerTrim information */

/* Field CruiseControlPowerDelayComp information */

/* Field ScaleToAirspeed information */

/* Field ScaleToAirspeedLimits information */

// Array element names for field ScaleToAirspeedLimits
typedef enum {
    STABILIZATIONSETTINGS_SCALETOAIRSPEEDLIMITS_MIN=0,
    STABILIZATIONSETTINGS_SCALETOAIRSPEEDLIMITS_MAX=1
} StabilizationSettingsScaleToAirspeedLimitsElem;

// Number of elements for field ScaleToAirspeedLimits
#define STABILIZATIONSETTINGS_SCALETOAIRSPEEDLIMITS_NUMELEM 2

/* Field FlightModeMap information */

// Enumeration options for field FlightModeMap
typedef enum __attribute__ ((__packed__)) {
    STABILIZATIONSETTINGS_FLIGHTMODEMAP_BANK1=0,
    STABILIZATIONSETTINGS_FLIGHTMODEMAP_BANK2=1,
    STABILIZATIONSETTINGS_FLIGHTMODEMAP_BANK3=2
} StabilizationSettingsFlightModeMapOptions;

// Number of elements for field FlightModeMap
#define STABILIZATIONSETTINGS_FLIGHTMODEMAP_NUMELEM 6

/* Field VbarGyroSuppress information */

/* Field VbarPiroComp information */

// Enumeration options for field VbarPiroComp
typedef enum __attribute__ ((__packed__)) {
    STABILIZATIONSETTINGS_VBARPIROCOMP_FALSE=0,
    STABILIZATIONSETTINGS_VBARPIROCOMP_TRUE=1
} StabilizationSettingsVbarPiroCompOptions;

/* Field VbarMaxAngle information */

/* Field DerivativeCutoff information */

/* Field MaxAxisLock information */

/* Field MaxAxisLockRate information */

/* Field MaxWeakLevelingRate information */

/* Field RattitudeModeTransition information */

/* Field CruiseControlMinThrust information */

/* Field CruiseControlMaxThrust information */

/* Field CruiseControlMaxAngle information */

/* Field CruiseControlFlightModeSwitchPosEnable information */

// Enumeration options for field CruiseControlFlightModeSwitchPosEnable
typedef enum __attribute__ ((__packed__)) {
    STABILIZATIONSETTINGS_CRUISECONTROLFLIGHTMODESWITCHPOSENABLE_FALSE=0,
    STABILIZATIONSETTINGS_CRUISECONTROLFLIGHTMODESWITCHPOSENABLE_TRUE=1
} StabilizationSettingsCruiseControlFlightModeSwitchPosEnableOptions;

// Number of elements for field CruiseControlFlightModeSwitchPosEnable
#define STABILIZATIONSETTINGS_CRUISECONTROLFLIGHTMODESWITCHPOSENABLE_NUMELEM 6

/* Field CruiseControlInvertedThrustReversing information */

// Enumeration options for field CruiseControlInvertedThrustReversing
typedef enum __attribute__ ((__packed__)) {
    STABILIZATIONSETTINGS_CRUISECONTROLINVERTEDTHRUSTREVERSING_UNREVERSED=0,
    STABILIZATIONSETTINGS_CRUISECONTROLINVERTEDTHRUSTREVERSING_REVERSED=1
} StabilizationSettingsCruiseControlInvertedThrustReversingOptions;

/* Field CruiseControlInvertedPowerOutput information */

// Enumeration options for field CruiseControlInvertedPowerOutput
typedef enum __attribute__ ((__packed__)) {
    STABILIZATIONSETTINGS_CRUISECONTROLINVERTEDPOWEROUTPUT_ZERO=0,
    STABILIZATIONSETTINGS_CRUISECONTROLINVERTEDPOWEROUTPUT_NORMAL=1,
    STABILIZATIONSETTINGS_CRUISECONTROLINVERTEDPOWEROUTPUT_BOOSTED=2
} StabilizationSettingsCruiseControlInvertedPowerOutputOptions;

/* Field LowThrottleZeroIntegral information */

// Enumeration options for field LowThrottleZeroIntegral
typedef enum __attribute__ ((__packed__)) {
    STABILIZATIONSETTINGS_LOWTHROTTLEZEROINTEGRAL_FALSE=0,
    STABILIZATIONSETTINGS_LOWTHROTTLEZEROINTEGRAL_TRUE=1
} StabilizationSettingsLowThrottleZeroIntegralOptions;

/* Field FlightModeAssistMap information */

// Enumeration options for field FlightModeAssistMap
typedef enum __attribute__ ((__packed__)) {
    STABILIZATIONSETTINGS_FLIGHTMODEASSISTMAP_NONE=0,
    STABILIZATIONSETTINGS_FLIGHTMODEASSISTMAP_GPSASSIST=1
} StabilizationSettingsFlightModeAssistMapOptions;

// Number of elements for field FlightModeAssistMap
#define STABILIZATIONSETTINGS_FLIGHTMODEASSISTMAP_NUMELEM 6

/* Field MeasureBasedDTerm information */

// Enumeration options for field MeasureBasedDTerm
typedef enum __attribute__ ((__packed__)) {
    STABILIZATIONSETTINGS_MEASUREBASEDDTERM_FALSE=0,
    STABILIZATIONSETTINGS_MEASUREBASEDDTERM_TRUE=1
} StabilizationSettingsMeasureBasedDTermOptions;



typedef struct __attribute__ ((__packed__)) {
    float Roll;
    float Pitch;
    float Yaw;
}  StabilizationSettingsVbarSensitivityData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  StabilizationSettingsVbarSensitivityDataArray ;
#define StabilizationSettingsVbarSensitivityToArray( var ) UAVObjectFieldToArray( StabilizationSettingsVbarSensitivityData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
}  StabilizationSettingsVbarRollPIData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  StabilizationSettingsVbarRollPIDataArray ;
#define StabilizationSettingsVbarRollPIToArray( var ) UAVObjectFieldToArray( StabilizationSettingsVbarRollPIData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
}  StabilizationSettingsVbarPitchPIData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  StabilizationSettingsVbarPitchPIDataArray ;
#define StabilizationSettingsVbarPitchPIToArray( var ) UAVObjectFieldToArray( StabilizationSettingsVbarPitchPIData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
}  StabilizationSettingsVbarYawPIData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  StabilizationSettingsVbarYawPIDataArray ;
#define StabilizationSettingsVbarYawPIToArray( var ) UAVObjectFieldToArray( StabilizationSettingsVbarYawPIData, var )

typedef struct __attribute__ ((__packed__)) {
    float Min;
    float Max;
}  StabilizationSettingsScaleToAirspeedLimitsData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  StabilizationSettingsScaleToAirspeedLimitsDataArray ;
#define StabilizationSettingsScaleToAirspeedLimitsToArray( var ) UAVObjectFieldToArray( StabilizationSettingsScaleToAirspeedLimitsData, var )


/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    StabilizationSettingsVbarSensitivityData VbarSensitivity;
    StabilizationSettingsVbarRollPIData VbarRollPI;
    StabilizationSettingsVbarPitchPIData VbarPitchPI;
    StabilizationSettingsVbarYawPIData VbarYawPI;
    float VbarTau;
    float GyroTau;
    float DerivativeGamma;
    float AxisLockKp;
    float WeakLevelingKp;
    float CruiseControlMaxPowerFactor;
    float CruiseControlPowerTrim;
    float CruiseControlPowerDelayComp;
    float ScaleToAirspeed;
    StabilizationSettingsScaleToAirspeedLimitsData ScaleToAirspeedLimits;
    StabilizationSettingsFlightModeMapOptions FlightModeMap[6];
    int8_t VbarGyroSuppress;
    StabilizationSettingsVbarPiroCompOptions VbarPiroComp;
    uint8_t VbarMaxAngle;
    uint8_t DerivativeCutoff;
    uint8_t MaxAxisLock;
    uint8_t MaxAxisLockRate;
    uint8_t MaxWeakLevelingRate;
    uint8_t RattitudeModeTransition;
    int8_t CruiseControlMinThrust;
    uint8_t CruiseControlMaxThrust;
    uint8_t CruiseControlMaxAngle;
    StabilizationSettingsCruiseControlFlightModeSwitchPosEnableOptions CruiseControlFlightModeSwitchPosEnable[6];
    StabilizationSettingsCruiseControlInvertedThrustReversingOptions CruiseControlInvertedThrustReversing;
    StabilizationSettingsCruiseControlInvertedPowerOutputOptions CruiseControlInvertedPowerOutput;
    StabilizationSettingsLowThrottleZeroIntegralOptions LowThrottleZeroIntegral;
    StabilizationSettingsFlightModeAssistMapOptions FlightModeAssistMap[6];
    StabilizationSettingsMeasureBasedDTermOptions MeasureBasedDTerm;

} __attribute__((packed)) StabilizationSettingsDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes
 */
typedef StabilizationSettingsDataPacked __attribute__((aligned(4))) StabilizationSettingsData;

/*
 * Union to apply the data array to and to use as structured object data
 */
union {
    StabilizationSettingsDataPacked data;
    byte arr[STABILIZATIONSETTINGS_NUMBYTES];
 } StabilizationSettingsDataUnion;

#endif // STABILIZATIONSETTINGS_H

/**
 * @}
 * @}
 */
