/**
 ******************************************************************************
 * @addtogroup UAVObjects LibrePilot UAVObjects
 * @{
 * @addtogroup ActuatorDesired ActuatorDesired
 * @brief Desired raw, pitch and yaw actuator settings.  Comes from either @ref StabilizationModule or @ref ManualControlModule depending on FlightMode.
 *
 * Autogenerated files and functions for ActuatorDesired Object
 *
 * @{
 *
 * @file       actuatordesired.h
 *
 * @author     The LibrePilot Project, https://www.librepilot.org, (C) 2017.
 *             The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 *
 * @brief      Arduino Header of the ActuatorDesired object. This file has been
 *             automatically generated by the UAVObjectGenerator.
 *
 * @note       Object definition file: actuatordesired.xml.
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef ACTUATORDESIRED_H
#define ACTUATORDESIRED_H
#include <stdbool.h>
/* Object constants */
#define ACTUATORDESIRED_OBJID 0xEAE65C28
#define ACTUATORDESIRED_ISSINGLEINST 1
#define ACTUATORDESIRED_ISSETTINGS 0
#define ACTUATORDESIRED_ISPRIORITY 0
#define ACTUATORDESIRED_NUMBYTES sizeof(ActuatorDesiredData)

/* Field Roll information */

/* Field Pitch information */

/* Field Yaw information */

/* Field Thrust information */

/* Field UpdateTime information */

/* Field NumLongUpdates information */




/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    float Roll;
    float Pitch;
    float Yaw;
    float Thrust;
    float UpdateTime;
    float NumLongUpdates;

} __attribute__((packed)) ActuatorDesiredDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes
 */
typedef ActuatorDesiredDataPacked __attribute__((aligned(4))) ActuatorDesiredData;

/*
 * Union to apply the data array to and to use as structured object data
 */
union {
    ActuatorDesiredDataPacked data;
    byte arr[ACTUATORDESIRED_NUMBYTES];
 } ActuatorDesiredDataUnion;

#endif // ACTUATORDESIRED_H

/**
 * @}
 * @}
 */
