/**
 ******************************************************************************
 * @addtogroup UAVObjects LibrePilot UAVObjects
 * @{
 * @addtogroup RevoSettings RevoSettings
 * @brief Settings for the revo to control the algorithm and what is updated
 *
 * Autogenerated files and functions for RevoSettings Object
 *
 * @{
 *
 * @file       revosettings.h
 *
 * @author     The LibrePilot Project, https://www.librepilot.org, (C) 2017.
 *             The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 *
 * @brief      Arduino Header of the RevoSettings object. This file has been
 *             automatically generated by the UAVObjectGenerator.
 *
 * @note       Object definition file: revosettings.xml.
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef REVOSETTINGS_H
#define REVOSETTINGS_H
#include <stdbool.h>
/* Object constants */
#define REVOSETTINGS_OBJID 0xC41DB204
#define REVOSETTINGS_ISSINGLEINST 1
#define REVOSETTINGS_ISSETTINGS 1
#define REVOSETTINGS_ISPRIORITY 0
#define REVOSETTINGS_NUMBYTES sizeof(RevoSettingsData)

/* Field BaroGPSOffsetCorrectionAlpha information */

/* Field MagnetometerMaxDeviation information */

// Array element names for field MagnetometerMaxDeviation
typedef enum {
    REVOSETTINGS_MAGNETOMETERMAXDEVIATION_WARNING=0,
    REVOSETTINGS_MAGNETOMETERMAXDEVIATION_ERROR=1
} RevoSettingsMagnetometerMaxDeviationElem;

// Number of elements for field MagnetometerMaxDeviation
#define REVOSETTINGS_MAGNETOMETERMAXDEVIATION_NUMELEM 2

/* Field BaroTempCorrectionPolynomial information */

// Array element names for field BaroTempCorrectionPolynomial
typedef enum {
    REVOSETTINGS_BAROTEMPCORRECTIONPOLYNOMIAL_A=0,
    REVOSETTINGS_BAROTEMPCORRECTIONPOLYNOMIAL_B=1,
    REVOSETTINGS_BAROTEMPCORRECTIONPOLYNOMIAL_C=2,
    REVOSETTINGS_BAROTEMPCORRECTIONPOLYNOMIAL_D=3
} RevoSettingsBaroTempCorrectionPolynomialElem;

// Number of elements for field BaroTempCorrectionPolynomial
#define REVOSETTINGS_BAROTEMPCORRECTIONPOLYNOMIAL_NUMELEM 4

/* Field BaroTempCorrectionExtent information */

// Array element names for field BaroTempCorrectionExtent
typedef enum {
    REVOSETTINGS_BAROTEMPCORRECTIONEXTENT_MIN=0,
    REVOSETTINGS_BAROTEMPCORRECTIONEXTENT_MAX=1
} RevoSettingsBaroTempCorrectionExtentElem;

// Number of elements for field BaroTempCorrectionExtent
#define REVOSETTINGS_BAROTEMPCORRECTIONEXTENT_NUMELEM 2

/* Field VelocityPostProcessingLowPassAlpha information */

/* Field FusionAlgorithm information */

// Enumeration options for field FusionAlgorithm
typedef enum __attribute__ ((__packed__)) {
    REVOSETTINGS_FUSIONALGORITHM_NONE=0,
    REVOSETTINGS_FUSIONALGORITHM_BASICCOMPLEMENTARY=1,
    REVOSETTINGS_FUSIONALGORITHM_COMPLEMENTARYMAG=2,
    REVOSETTINGS_FUSIONALGORITHM_COMPLEMENTARYMAGGPSOUTDOOR=3,
    REVOSETTINGS_FUSIONALGORITHM_INS13INDOOR=4,
    REVOSETTINGS_FUSIONALGORITHM_GPSNAVIGATIONINS13=5,
    REVOSETTINGS_FUSIONALGORITHM_GPSNAVIGATIONINS13CF=6,
    REVOSETTINGS_FUSIONALGORITHM_TESTINGINSINDOORCF=7,
    REVOSETTINGS_FUSIONALGORITHM_ACRONOSENSORS=8
} RevoSettingsFusionAlgorithmOptions;



typedef struct __attribute__ ((__packed__)) {
    float Warning;
    float Error;
}  RevoSettingsMagnetometerMaxDeviationData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  RevoSettingsMagnetometerMaxDeviationDataArray ;
#define RevoSettingsMagnetometerMaxDeviationToArray( var ) UAVObjectFieldToArray( RevoSettingsMagnetometerMaxDeviationData, var )

typedef struct __attribute__ ((__packed__)) {
    float a;
    float b;
    float c;
    float d;
}  RevoSettingsBaroTempCorrectionPolynomialData ;
typedef struct __attribute__ ((__packed__)) {
    float array[4];
}  RevoSettingsBaroTempCorrectionPolynomialDataArray ;
#define RevoSettingsBaroTempCorrectionPolynomialToArray( var ) UAVObjectFieldToArray( RevoSettingsBaroTempCorrectionPolynomialData, var )

typedef struct __attribute__ ((__packed__)) {
    float min;
    float max;
}  RevoSettingsBaroTempCorrectionExtentData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  RevoSettingsBaroTempCorrectionExtentDataArray ;
#define RevoSettingsBaroTempCorrectionExtentToArray( var ) UAVObjectFieldToArray( RevoSettingsBaroTempCorrectionExtentData, var )


/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    float BaroGPSOffsetCorrectionAlpha;
    RevoSettingsMagnetometerMaxDeviationData MagnetometerMaxDeviation;
    RevoSettingsBaroTempCorrectionPolynomialData BaroTempCorrectionPolynomial;
    RevoSettingsBaroTempCorrectionExtentData BaroTempCorrectionExtent;
    float VelocityPostProcessingLowPassAlpha;
    RevoSettingsFusionAlgorithmOptions FusionAlgorithm;

} __attribute__((packed)) RevoSettingsDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes
 */
typedef RevoSettingsDataPacked __attribute__((aligned(4))) RevoSettingsData;

/*
 * Union to apply the data array to and to use as structured object data
 */
union {
    RevoSettingsDataPacked data;
    byte arr[REVOSETTINGS_NUMBYTES];
 } RevoSettingsDataUnion;

#endif // REVOSETTINGS_H

/**
 * @}
 * @}
 */
